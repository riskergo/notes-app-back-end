Handler.js :
const { nanoid } = require('nanoid');
const notes = require('./notes.js');

const addNoteHandler = (request, h) => {
  //* mengambil data body/payload dari request client
  const { title, tags, body } = request.payload;

  //* data tambahan untuk notes yang dibuat oleh user
  const id = nanoid(16);
  const createdAt = new Date().toISOString();
  const updatedAt = createdAt;

  //* data penampung sementara;
  const newNote = { title, tags, body, id, createdAt, updatedAt };

  //* push
  notes.push(newNote);

  //* pengecekan apakah notes sudah ada (dimasukkan) di variabel notes
  const isSuccess = notes.filter((note) => note.id === id).length > 0;

  //* pengkondisian jika sukses
  if (isSuccess) {
    const response = h.response({
      status: 'success',
      message: 'Catatan Berhasil ditambahkan',
      data: {
        noteId: id,
      },
    });

    response.code(201);
    return response;
  }

  //* jika gagal
  const response = h.response({
    status: 'fail',
    message: 'Catatan gagal ditambahkan',
  });

  response.code(500);
  return response;
};

const getAllNotesHandler = () => ({
  status: 'success',
  data: {
    notes
  }
});

const getNoteById = (request, h) => {
  const { id } = request.params;

  const note = notes.filter((note) => note.id === id)[0];

  if (note !== undefined){
    return {
      status: 'success',
      data: {
        note,
      }
    };
  }

  const response = h.response({
    status: 'fail',
    message: 'Catatan tidak ditemukan',
  });

  response.code(404);
  return response;
};


module.exports =  { addNoteHandler, getAllNotesHandler, getNoteById };